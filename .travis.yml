language: cpp

jobs:
  include:
    - name: Windows (7 and later)
      os: windows
      env:
        - TARGET_OS=windows
        - MAKE=mingw32-make
        - QMAKE=qmake.exe
        - MINGW_PREFIX=/c/ProgramData/chocolatey/lib/mingw/tools/install/mingw32/
        - MINGW_VERSION=8.1.0
        - QT_FETCHDIR=$HOME/Qt/
        - QT_VERSION=5.15.1
        - QT_TOOLCHAIN=win32_mingw81
      cache:
        directories:
          - $MINGW_PREFIX
          - $QT_FETCHDIR
      before_install:
        # Check if dependencies are cached, otherwise fetch them.
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_mingw.sh "$MINGW_PREFIX" "$MINGW_VERSION"
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_qt.sh "$QT_FETCHDIR" "$QT_VERSION" "$QT_TOOLCHAIN"
          qtbase qttools
        - export QT_PREFIX="$(echo "$QT_FETCHDIR"/"$QT_VERSION"/*)"
        - export PATH="$MINGW_PREFIX"/bin:"$QT_PREFIX"/bin:"$PATH"
    - name: Windows XP
      os: windows
      env:
        - TARGET_OS=windows-xp
        - MAKE=mingw32-make
        - QMAKE=qmake.exe
        - MINGW_PREFIX=/c/tools/mingw32/
        - MINGW_VERSION=4.9.3
        - QT_FETCHDIR=$HOME/Qt/
        - QT_VERSION=5.5
        - QT_TOOLCHAIN=win32_mingw492 # 4.9.3 is slightly newer patch level, still compiles
      cache:
        directories:
          - $MINGW_PREFIX
          - $QT_FETCHDIR
      before_install:
        # Check if dependencies are cached, otherwise fetch them.
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_mingw.sh "$MINGW_PREFIX" "$MINGW_VERSION"
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_qt.sh "$QT_FETCHDIR" "$QT_VERSION" "$QT_TOOLCHAIN"
          essentials addons
        - export QT_PREFIX="$(echo "$QT_FETCHDIR"/"$QT_VERSION"/*)"
        - export PATH="$MINGW_PREFIX"/bin:"$QT_PREFIX"/bin:"$PATH"

    - name: macOS (Modern)
      os: osx
      osx_image: xcode12.2
      env:
        - TARGET_OS=macos
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_jack CONFIG+=jack_has_rename"
      addons:
        homebrew:
          packages:
            - qt
            - jack
            - p7zip
          update: true
      before_install:
        # Force linking of Qt into PATH
        - brew link --force qt
        # Manually append JACK includes to qmake,
        # it doesn't seem to pick them up on its own (forcing linking didn't help)
        - JACKLIB=$(find /usr/local/Cellar/jack/ -type d -name lib)
        - JACKINC=$(find /usr/local/Cellar/jack/ -type d -name include)
        - export QMAKE="$QMAKE LIBS+=-L$JACKLIB INCLUDEPATH+=$JACKINC"
    - name: macOS Legacy
      os: osx
      osx_image: xcode7.3
      env:
        - TARGET_OS=macos-legacy
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_jack CONFIG+=jack_has_rename"
      before_install:
        # Check out commit with Qt 5.6.2 bump
        - cd "$(brew --repo homebrew/core)" && git checkout 106d0878ee812cb8f5c403f717bdebe836445aee
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install qt5 jack p7zip
        # Force linking of Qt into PATH
        - brew link --force qt5
        # Manually append JACK includes to qmake,
        # it doesn't seem to pick them up on its own (forcing linking didn't help)
        - JACKLIB=$(find /usr/local/Cellar/jack/ -type d -name lib)
        - JACKINC=$(find /usr/local/Cellar/jack/ -type d -name include)
        - export QMAKE="$QMAKE LIBS+=-L$JACKLIB INCLUDEPATH+=$JACKINC"
        - pwd
        - ls -ahl

    - name: Linux (Ubuntu 16.04)
      os: linux
      dist: xenial
      env:
        - TARGET_OS=linux
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_pulse CONFIG+=use_jack CONFIG+=jack_has_rename"
      # no deployment phase, manual build is preferred on Linux
      # TODO consider Appimage?

addons:
  apt:
    sources:
      - sourceline: ppa:ubuntu-sdk-team/ppa
    packages:
      - qt5-default
      - qttools5-dev-tools
      - libasound2-dev
      - libpulse-dev
      - libjack-jackd2-dev

git:
  depth: 3

branches:
  only:
    - master
    - "/^v[0-9\\.]+$/"
    - improve-readme

script:
  - cd BambooTracker
  - "$QMAKE CONFIG+=release CONFIG-=debug"
  - "$MAKE -j2"
  - cd ..

before_deploy:
  - mkdir build
  - cd build
  - bash "$TRAVIS_BUILD_DIR"/ci/package_"$TRAVIS_OS_NAME".sh
  - 7z a -tzip "$TRAVIS_BUILD_DIR"/BambooTracker-"$TRAVIS_TAG"-"$TARGET_OS".zip *

deploy:
  provider: releases
  token:
    secure: bs+nLxg+IeepN/gyUHN//I1pPvKDMXiAGF7aE8vOW7c6ZeJMoUIGydJkNzsPWIKnRhMa5RYlOXM+9/eMzYe0JAC2cVj/Zo2IMeRVYqeQDrKZ1my6CMGGvE0dUnSHXIezN0+Z4SP+p6HRRF20FLqthz/3ICWiqoSo1/HFHnj5nDCG2Ni++Xt5PFVBOa6sp9CzDBtm9I8xBwoieZFwUpU/BMOqlHHHoQ09YSdzCdu0E544bAh7RXgmyl+ayYD8klVhf5p82oynnMliAdj0IOlPRETyBhhdXXv5/Eivtoo9e5bvlbEwuuy8yvbZl9LW0fQLobB2o/2eYNtDpxOciLOZQaj8EvjhOPVeyAlEKi28VOusYFVrGk3UEuN5HoxMPdwWRJWylgcsYd1ZWS907ccj9XLrF4bVpyPOhvYiLA1zgIU+nk5B7NWqzQjcNEQK4jx+UeJURLpZMS8F1lyLlNJeWr3b5E0+6+nTmgeq5E7jGwdhUraje6W5hmXlwrKvoJ8kFnKDyRKuNCvtnoBX7XvJl7iYmp4FvQfgSWFOkIIvWdGPbByMff6vYrXU3WvkGPLErZuM9ivj7HCwx55xiBimKZCiUgrTPrbgN4KJfcnA9YbgumoF9K4xdvQmBLxV5S/LIm7pUJS5+PSyZM+PNfsbuapYPQWfdTH5/ZGetdUNgV0=
  file: $TRAVIS_BUILD_DIR/BambooTracker-$TRAVIS_TAG-$TARGET_OS.zip
  skip_cleanup: true
  on:
    repo: rerrahkr/BambooTracker
    tags: true
    condition: $TRAVIS_OS_NAME != linux
