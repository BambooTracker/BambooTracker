language: cpp

jobs:
  include:
    - name: Windows (7 and later)
      os: windows
      env:
        - TARGET_OS=windows
        - MAKE=mingw32-make
        - QMAKE=qmake.exe
        - MINGW_PREFIX=/c/ProgramData/chocolatey/lib/mingw/tools/install/mingw32/
        - MINGW_VERSION=8.1.0
        - QT_FETCHDIR=$HOME/Qt/
        - QT_VERSION=5.15.1
        - QT_TOOLCHAIN=win32_mingw81
      cache:
        directories:
          - $MINGW_PREFIX
          - $QT_FETCHDIR
      before_install:
        # Check if dependencies are cached, otherwise fetch them.
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_mingw.sh "$MINGW_PREFIX" "$MINGW_VERSION"
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_qt.sh "$QT_FETCHDIR" "$QT_VERSION" "$QT_TOOLCHAIN"
          qtbase qttools
        - export QT_PREFIX="$(echo "$QT_FETCHDIR"/"$QT_VERSION"/*)"
        - export PATH="$MINGW_PREFIX"/bin:"$QT_PREFIX"/bin:"$PATH"
    - name: Windows XP
      os: windows
      env:
        - TARGET_OS=windows-xp
        - MAKE=mingw32-make
        - QMAKE=qmake.exe
        - MINGW_PREFIX=/c/tools/mingw32/
        - MINGW_VERSION=4.9.3
        - QT_FETCHDIR=$HOME/Qt/
        - QT_VERSION=5.5
        - QT_TOOLCHAIN=win32_mingw492 # 4.9.3 is slightly newer patch level, still compiles
      cache:
        directories:
          - $MINGW_PREFIX
          - $QT_FETCHDIR
      before_install:
        # Check if dependencies are cached, otherwise fetch them.
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_mingw.sh "$MINGW_PREFIX" "$MINGW_VERSION"
        - bash "$TRAVIS_BUILD_DIR"/ci/fetch_qt.sh "$QT_FETCHDIR" "$QT_VERSION" "$QT_TOOLCHAIN"
          essentials addons
        - export QT_PREFIX="$(echo "$QT_FETCHDIR"/"$QT_VERSION"/*)"
        - export PATH="$MINGW_PREFIX"/bin:"$QT_PREFIX"/bin:"$PATH"

    - name: macOS (Modern)
      os: osx
      osx_image: xcode12.2
      env:
        - TARGET_OS=macos
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_jack CONFIG+=jack_has_rename"
      addons:
        homebrew:
          packages:
            - qt
            - jack
            - p7zip
          update: true
      before_install:
        # Force linking of Qt into PATH
        - brew link --force qt
        # Manually append JACK includes to qmake,
        # it doesn't seem to pick them up on its own (forcing linking didn't help)
        - JACKLIB=$(find /usr/local/Cellar/jack/ -type d -name lib)
        - JACKINC=$(find /usr/local/Cellar/jack/ -type d -name include)
        - export QMAKE="$QMAKE LIBS+=-L$JACKLIB INCLUDEPATH+=$JACKINC"
    - name: macOS Legacy
      os: osx
      osx_image: xcode7.3
      env:
        - TARGET_OS=macos-legacy
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_jack CONFIG+=jack_has_rename"
      before_install:
        # Check out commit with Qt 5.6.2 bump
        - git -C "$(brew --repo homebrew/core)" checkout 106d0878ee812cb8f5c403f717bdebe836445aee
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install qt5 jack p7zip
        # Force linking of Qt into PATH
        - brew link --force qt5
        # Manually append JACK includes to qmake,
        # it doesn't seem to pick them up on its own (forcing linking didn't help)
        - JACKLIB=$(find /usr/local/Cellar/jack/ -type d -name lib)
        - JACKINC=$(find /usr/local/Cellar/jack/ -type d -name include)
        - export QMAKE="$QMAKE LIBS+=-L$JACKLIB INCLUDEPATH+=$JACKINC"

    # Build test with older packages
    - name: Linux (Ubuntu 16.04)
      os: linux
      dist: xenial
      env:
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_pulse CONFIG+=use_jack CONFIG+=jack_has_rename"
      addons:
        apt:
          sources:
            - sourceline: ppa:ubuntu-sdk-team/ppa
          packages:
            - qt5-default
            - qttools5-dev-tools
            - libasound2-dev
            - libpulse-dev
            - libjack-jackd2-dev
    # Deploying system, updated packages
    - name: Linux (Nixpkgs)
      os: linux
      dist: xenial
      env:
        - TARGET_OS=linux
        - MAKE=make
        - QMAKE="qmake CONFIG+=use_pulse CONFIG+=use_jack CONFIG+=jack_has_rename"
        - NIX_PATH="nixpkgs=channel:nixpkgs-unstable"
      version: ~> 1.0 
      import: nix-community/nix-travis-ci:nix.yml@main
      script:
        - nix-build ci/BambooTracker.nix -A build
      before_deploy:
        - nix-build ci/BambooTracker.nix -A bundle

git:
  depth: 3

branches:
  only:
    - master
    - "/^v[0-9\\.]+$/"
    - improve-readme

script:
  - cd BambooTracker
  - "$QMAKE CONFIG+=release CONFIG-=debug"
  - "$MAKE -j2"
  - cd ..

before_deploy:
  - mkdir build
  - cd build
  - bash "$TRAVIS_BUILD_DIR"/ci/package_"$TRAVIS_OS_NAME".sh
  - 7z a -tzip "$TRAVIS_BUILD_DIR"/BambooTracker-"$TRAVIS_TAG"-"$TARGET_OS".zip *

deploy:
  provider: releases
  token:
    secure: Vy5JQ4AeSi+H9hKcpD6VrKVCmAAlqJHCE5EHiKYng8Z0HTeJYrj40JuULDUVWyl/gK2Cy1SAq4Ma9u0SPOr2IScEyzo0o8VbNPWZzz2fmwI4PBvpqnt+eBNg9GhsrYQiN4TpY7UIKQjLAP3anPk6NABQQ+RpmyBLoN8VWwVfCBx8GpxvAF1+B5qezsgCs5vHP7Qrzrtt0n0H6XxGM0xb1W2eiCc9h7YZTXyvtgWsWY6wqR0whlvO8i5YiP/fyy+WHQTtSfg69CZqHXbaSE0uosYmvXOZMD1Cr25+6oSEGSN7G0u2bvjWeykCP+v2PrqyojFeUcRfVriorRpzpDtdeZ2pPu84Ujz9C2wFTJ4FXzo96MRCNyjRAQE2ueHzgEf6+g6wbbOsZzREklnjFMSj3WRM6SFy0IGdNRwtMUqZtlYqgPvZYjiOssi7EppMM20CelZ702FJCPaX8rVmhXyaK5QRUA2M2cCJLZITf+MuDOpJKsyxwqHiVLmiHUsxu5I/qUFSDQMxfNJzSXieq93FbX12Y9jXyRvMG8MtQNQvfOsZTlGwiRBqdSnjFzaKTEoQo5lfPdSMJzIm6qGmsl9YiK2gvdfmc9/wMu8PeCb/T1sUlJ4F/2gHMbIH2HGJpHrhisdwjYkVo1EFYF2CZ3yIoE2KjjyRLNOtMQllG5II+Mw=
  file: $TRAVIS_BUILD_DIR/BambooTracker-$TRAVIS_TAG-$TARGET_OS.zip
  skip_cleanup: true
  on:
    repo: OPNA2608/BambooTracker
    tags: true
