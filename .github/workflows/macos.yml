name: macOS

on:
  push:
    branches: master
    tags: 'v*.*.*'
  pull_request:
    branches: master

defaults:
  run:
    shell: bash

env:
  BUILD_TARGET: macos
  SCRIPT_NAME: osx
  MAKE: make
  BT_INSTALLBASE: ${{ github.workspace }}/target/
  QMAKE_EXTRA_ARGUMENTS: CONFIG+=install_flat CONFIG+=use_jack

jobs:
  build:
    runs-on: macos-10.15

    steps:
      - name: Identify build type.
        id: identify-build
        run: |
          case ${GITHUB_REF} in
            refs/tags/* )
              TAG=${GITHUB_REF/refs\/tags\//}
              echo "Release ${TAG}"
              echo "::set-output name=build-tag::${TAG}"
              echo "::set-output name=release::true"
              ;;
            refs/heads/* )
              BRANCH=${GITHUB_REF/refs\/heads\//}
              echo "Test ${BRANCH}"
              echo "::set-output name=build-tag::${BRANCH}"
              echo "::set-output name=release::false"
              ;;
            * )
              echo "Test (unknown)"
              echo "::set-output name=build-tag::unknown"
              echo "::set-output name=release::false"
              ;;
          esac

      - name: Checking out repository.
        uses: actions/checkout@v2
        with:
          submodules: recursive

      ## macOS-specific steps

      - name: Pin Xcode version
        run: sudo xcode-select -s "/Applications/Xcode_12.1.1.app"

      - name: Installing dependencies.
        run: |
          brew update
          # JACK implies brew link python-3.9, fails due to shipped python binaries
          brew unlink python@3.9
          brew link --overwrite python@3.9
          brew upgrade --force python@3.9
          brew install qt5 pkg-config jack p7zip
          brew link --force qt5

      ## End macOS-specific steps

      - name: Configuring.
        run: |
          qmake Project.pro PREFIX=${BT_INSTALLBASE} \
            CONFIG+=release CONFIG-=debug ${QMAKE_EXTRA_ARGUMENTS}
          ${MAKE} qmake_all

      - name: Building.
        run: |
          ${MAKE} -j2

      - name: Installing.
        run: |
          ${MAKE} -j2 install

      - name: Test packaging.
        if: env.DONT_PACKAGE != 'true'
        run: |
          pushd ${BT_INSTALLBASE}
          bash ${GITHUB_WORKSPACE}/scripts/package_${SCRIPT_NAME:-${BUILD_TARGET%%-*}}.sh
          popd

      - name: Finalize packaging.
        id: packaging
        if: steps.identify-build.outputs.release == 'true' && env.DONT_PACKAGE != 'true'
        run: |
          export package_name="BambooTracker-${{ steps.identify-build.outputs.build-tag }}-${BUILD_TARGET}"
          echo "::set-output name=package-name::${package_name}"
          mv -v ${BT_INSTALLBASE} ${package_name}
          7z a -tzip ${package_name}{.zip,}

      - name: Upload release package.
        if: steps.identify-build.outputs.release == 'true' && env.DONT_PACKAGE != 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.packaging.outputs.package-name }}.zip
          asset_name: ${{ steps.packaging.outputs.package-name }}.zip
          tag: ${{ github.ref }}
